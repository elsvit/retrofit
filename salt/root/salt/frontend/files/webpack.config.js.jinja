'use strict';
var path = require('path');
var webpack = require('webpack');
var HtmlWebpackPlugin = require('html-webpack-plugin');
var ExtractTextPlugin = require('extract-text-webpack-plugin');
var env = process.env.NODE_ENV,
    npmPackageVersion = process.env.npm_package_version;

var config = {
    entry: [
        path.resolve(__dirname, 'index.js'),
        path.resolve(__dirname, '../../public/stylesheets/main.css')
    ],
    output: {
        path: path.resolve(__dirname, '../../public/'),
        publicPath: '/',
        filename: (env === 'production') ? 'javascripts/bundle_[hash].js' : 'javascripts/bundle.js'
    },
    module: {
        loaders: [
            {
                test: /.jsx?$/,
                loader: 'babel-loader',
                exclude: /node_modules/
            },
            {
                test: /\.html$/,
                loader: 'underscore-template-loader'
            },
            {
                test: /\.css$/,
                exclude: /node_modules/,
                loader: "style-loader!css-loader"
            },
            {
                test: /\.(png|jpg|jpeg|gif)$/,
                exclude: /node_modules/,
                loader: require.resolve("url-loader")
            },
            {
                test: /\.(svg|eot|otf|ttf|woff|woff2)$/,
                exclude: /node_modules/,
                loader: require.resolve("url-loader")
            }
        ]
    },
    plugins: [
        new ExtractTextPlugin('stylesheets/styles.css', { allChunks: true }),
        new HtmlWebpackPlugin({
            hash: false,
            filename: path.resolve(__dirname, '../../public') + '/index.html',
            template: 'index.html'
        }),
        new webpack.DefinePlugin({
            'process.env': {
                'NODE_ENV': JSON.stringify(env)
            },
            APP_STATE_VERSION_PROVIDED_BY_WEBPACK: JSON.stringify(npmPackageVersion)
        }),
        new webpack.optimize.OccurenceOrderPlugin(),
        new webpack.HotModuleReplacementPlugin(),
        new webpack.NoErrorsPlugin()
    ],
    devServer: {
        devtool: 'eval',
        colors: true,
        contentBase: '../../public',
        hot: true,
        proxy: {
            '*': {
            {%- if grains['virtual'] == 'VirtualBox' %}
                target: 'http://{{ pillar['project_dn_dev'] }}'
            {% else %}
                target: 'http://retrofit.{{ grains['fqdn'] }}'
            {% endif -%}
            }
        },
    },
};

if (env === 'production') {
  config.plugins.push(
    new webpack.optimize.UglifyJsPlugin({
      compressor: {
        pure_getters: true,
        unsafe: true,
        unsafe_comps: true,
        screw_ie8: true,
        warnings: false
      }
    })
  )
}

module.exports = config;